org: juanrodo
service: api-compras

plugins:
  - serverless-openapi-documenter

provider:
  name: aws
  runtime: nodejs22.x
  memorySize: 1024
  timeout: 60
  iam:
    role: arn:aws:iam::752087942362:role/LabRole
  environment:
    TABLE_CURSO: ${sls:stage}-t_curso
    TABLE_USUARIO: ${sls:stage}-t_usuario
    TABLE_COMPRAS: ${sls:stage}-t_compras
    FUNCION_VALIDAR: api-usuario-${sls:stage}-validar
    FUNCION_BUSCAR_CURSO: api-curso-${sls:stage}-obtenerCurso
    FUNCION_BUSCAR_HORARIO: api-horario-${sls:stage}-obtenerHorario

functions:
  comprarCurso:
    handler: Lambda_Comprar.handler
    events:
      - http:
          path: /compra/comprar
          method: post
          cors: true
          summary: Comprar curso
          description: >
            Registra una compra de curso para un alumno autenticado. 
            Valida el token JWT, verifica que el curso y horario existan, 
            y que no haya una compra previa.
          requestBody:
            description: Datos necesarios para registrar la compra.
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ComprarCurso'
          responses:
            '200':
              description: Compra realizada con éxito.
            '400':
              description: Error en los datos enviados.

  listarCompras:
    handler: Lambda_ListarCompras.handler
    events:
      - http:
          path: /compra/listar
          method: get
          cors: true
          summary: Listar compras
          description: >
            Lista las compras realizadas por un alumno autenticado,
            o por curso si es instructor o administrador.
          responses:
            '200':
              description: Lista de compras devuelta correctamente
            '401':
              description: Token inválido o expirado

  eliminarCompra:
    handler: Lambda_EliminarCompra.handler
    events:
      - http:
          path: /compra/eliminar
          method: delete
          cors: true
          summary: Eliminar compra
          description: >
            Elimina una compra realizada por el alumno autenticado si se encuentra
            en estado 'reservado' o 'inscrito'.
          requestBody:
            description: Datos necesarios para eliminar la compra.
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EliminarCompra'
          responses:
            '200':
              description: Compra eliminada exitosamente
            '403':
              description: No autorizado para eliminar la compra

custom:
  openapi:
    title: API de Compras
    version: 1.0.0
    description: API para registrar, listar y eliminar compras de cursos por alumnos.
    output: openapi.json
    format: json
    openApiVersion: 3.0.3
    postmanCollection: postman-compras.json
    components:
      schemas:
        ComprarCurso:
          type: object
          required: [tenant_id, curso_id, horario_id, estado]
          properties:
            tenant_id:
              type: string
              description: ID del tenant (organización)
            curso_id:
              type: string
              description: ID del curso a comprar
            horario_id:
              type: string
              description: ID del horario seleccionado
            estado:
              type: string
              enum: [reservado, inscrito]
              description: Estado inicial de la compra
        EliminarCompra:
          type: object
          required: [tenant_id, curso_id]
          properties:
            tenant_id:
              type: string
              description: ID del tenant (organización)
            curso_id:
              type: string
              description: ID del curso a eliminar

resources:
  Resources:
    TablaCompras:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-t_compras
        AttributeDefinitions:
          - AttributeName: tenant_id_dni_estado
            AttributeType: S
          - AttributeName: curso_id
            AttributeType: S
          - AttributeName: tenant_id_curso_id
            AttributeType: S
          - AttributeName: alumno_dni
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id_dni_estado
            KeyType: HASH
          - AttributeName: curso_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: tenant_curso_index
            KeySchema:
              - AttributeName: tenant_id_curso_id
                KeyType: HASH
              - AttributeName: alumno_dni
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
