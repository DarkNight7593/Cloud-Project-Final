org: juanrodo
service: api-compras

plugins:
  - serverless-openapi-documentation

provider:
  name: aws
  runtime: nodejs22.x
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::752087942362:role/LabRole
  environment:
    TABLE_COMPRAS: ${sls:stage}-t_compras
    FUNCION_VALIDAR: api-usuario-${sls:stage}-validar
    FUNCION_BUSCAR_CURSO: api-curso-${sls:stage}-obtenerCurso
    FUNCION_BUSCAR_HORARIO: api-horario-${sls:stage}-obtenerHorario

custom:
  documentation:
    version: '1.0.0'
    title: API de Compras
    description: API para registrar, listar y eliminar compras de cursos por alumnos.
    models:
      - name: ComprarCurso
        description: Modelo para registrar una compra
        contentType: application/json
        schema:
          type: object
          required: [tenant_id, curso_id, horario_id, estado]
          properties:
            tenant_id:
              type: string
            curso_id:
              type: string
            horario_id:
              type: string
            estado:
              type: string
              enum: [reservado, inscrito]
      - name: EliminarCompra
        description: Modelo para eliminar una compra
        contentType: application/json
        schema:
          type: object
          required: [tenant_id, curso_id]
          properties:
            tenant_id:
              type: string
            curso_id:
              type: string
      - name: ErrorResponse
        description: Modelo de respuesta de error
        contentType: application/json
        schema:
          type: object
          properties:
            error:
              type: string

functions:
  comprarCurso:
    handler: Lambda_Comprar.handler
    events:
      - http:
          path: compra/comprar
          method: post
          cors: true
          documentation:
            summary: Comprar curso
            description: Registra una compra para un alumno autenticado. Valida token, curso, horario y estado.
            requestBody:
              description: Información de la compra a registrar
              required: true
            requestModels:
              'application/json': ComprarCurso
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: Compra registrada exitosamente
              - statusCode: 400
                responseBody:
                  description: Datos inválidos
                responseModels:
                  'application/json': ErrorResponse
              - statusCode: 403
                responseBody:
                  description: No autorizado
                responseModels:
                  'application/json': ErrorResponse

  listarCompras:
    handler: Lambda_ListarCompras.handler
    events:
      - http:
          path: compra/listar
          method: get
          cors: true
          documentation:
            summary: Listar compras
            description: Lista compras por alumno o por curso dependiendo del rol del usuario.
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: Lista de compras obtenida correctamente
              - statusCode: 400
                responseBody:
                  description: Parámetros inválidos
                responseModels:
                  'application/json': ErrorResponse
              - statusCode: 403
                responseBody:
                  description: No autorizado
                responseModels:
                  'application/json': ErrorResponse

  eliminarCompra:
    handler: Lambda_EliminarCompra.handler
    events:
      - http:
          path: compra/eliminar
          method: delete
          cors: true
          documentation:
            summary: Eliminar compra
            description: Elimina una compra en estado reservado o inscrito realizada por un alumno.
            requestBody:
              description: Identificación de la compra a eliminar
              required: true
            requestModels:
              'application/json': EliminarCompra
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: Compra eliminada correctamente
              - statusCode: 400
                responseBody:
                  description: Datos inválidos
                responseModels:
                  'application/json': ErrorResponse
              - statusCode: 403
                responseBody:
                  description: No autorizado
                responseModels:
                  'application/json': ErrorResponse

resources:
  Resources:
    TablaCompras:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-t_compras
        AttributeDefinitions:
          - AttributeName: tenant_id_dni_estado
            AttributeType: S
          - AttributeName: curso_id
            AttributeType: S
          - AttributeName: tenant_id_curso_id
            AttributeType: S
          - AttributeName: alumno_dni
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id_dni_estado
            KeyType: HASH
          - AttributeName: curso_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: tenant_curso_index
            KeySchema:
              - AttributeName: tenant_id_curso_id
                KeyType: HASH
              - AttributeName: alumno_dni
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
