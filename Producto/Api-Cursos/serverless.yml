org: juanrodo
service: api-curso

plugins:
  - serverless-openapi-documenter

provider:
  name: aws
  runtime: nodejs22.x
  memorySize: 1024
  timeout: 60
  iam:
    role: arn:aws:iam::752087942362:role/LabRole
  environment:
    TABLE_CURSO: ${sls:stage}-t_curso
    TABLE_USER: ${sls:stage}-t_usuario
    TABLE_HORARIO: ${sls:stage}-t_horario
    FUNCION_VALIDAR: api-usuario-${sls:stage}-validar
    FUNCION_ELIMINAR_HORARIO: api-horario-${sls:stage}-eliminarHorario

functions:
  crearCurso:
    handler: Lambda_CrearCurso.handler
    events:
      - http:
          path: /curso/crear
          method: post
          cors: true

  listarCursos:
    handler: Lambda_ListarCursos.handler
    events:
      - http:
          path: /curso/listar
          method: get
          cors: true

  obtenerCurso:
    handler: Lambda_BuscarCurso.handler
    events:
      - http:
          path: /curso/buscar
          method: get
          cors: true

  actualizarCurso:
    handler: Lambda_ModiCurso.handler
    events:
      - http:
          path: /curso/modificar
          method: put
          cors: true

  eliminarCurso:
    handler: Lambda_EliminarCurso.handler
    events:
      - http:
          path: /curso/eliminar
          method: delete
          cors: true

package:
  individually: false
  include:
    - '**/*.js'

custom:
  openapi:
    title: API de Cursos
    version: 1.0.0
    description: Endpoints para crear, listar, modificar y eliminar cursos en un tenant educativo.
    output: openapi.json
    format: json
    openApiVersion: 3.0.3
    postmanCollection: postman-cursos.json

    paths:
      /curso/crear:
        post:
          summary: Crear curso
          description: Crea un nuevo curso para el tenant especificado.
          requestBody:
            description: Datos del nuevo curso
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CrearCursoRequest'
          responses:
            '200':
              description: Curso creado exitosamente

      /curso/listar:
        get:
          summary: Listar cursos
          description: Lista todos los cursos del tenant autenticado.
          responses:
            '200':
              description: Lista de cursos
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ListarCursosResponse'

      /curso/buscar:
        get:
          summary: Obtener curso
          description: Obtiene la información detallada de un curso específico por ID.
          responses:
            '200':
              description: Curso encontrado
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/CursoResponse'

      /curso/modificar:
        put:
          summary: Actualizar curso
          description: Modifica uno o más campos de un curso.
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ActualizarCursoRequest'
          responses:
            '200':
              description: Curso actualizado correctamente
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ActualizarCursoResponse'

      /curso/eliminar:
        delete:
          summary: Eliminar curso
          description: Elimina un curso y sus horarios asociados.
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EliminarCursoRequest'
          responses:
            '200':
              description: Curso eliminado con éxito
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/EliminarCursoResponse'

    components:
      schemas:
        CrearCursoRequest:
          type: object
          required: [tenant_id, nombre, descripcion, inicio, fin, precio]
          properties:
            tenant_id:
              type: string
              description: ID del tenant
            nombre:
              type: string
              description: Nombre del curso
            descripcion:
              type: string
              description: Descripción detallada
            inicio:
              type: string
              format: date
              description: Fecha de inicio (YYYY-MM-DD)
            fin:
              type: string
              format: date
              description: Fecha de fin (YYYY-MM-DD)
            precio:
              type: number
              description: Precio en moneda local

        CursoResponse:
          type: object
          properties:
            curso_id:
              type: string
            nombre:
              type: string
            descripcion:
              type: string
            inicio:
              type: string
              format: date
            fin:
              type: string
              format: date
            precio:
              type: number
            instructor_dni:
              type: string
            instructor_nombre:
              type: string
            tenant_id:
              type: string

        ListarCursosResponse:
          type: object
          properties:
            cursos:
              type: array
              items:
                $ref: "#/components/schemas/CursoResponse"
            paginacion:
              type: object
              properties:
                ultimoCursoId:
                  type: string
                total:
                  type: integer

        ActualizarCursoRequest:
          type: object
          properties:
            nombre:
              type: string
            descripcion:
              type: string
            inicio:
              type: string
              format: date
            fin:
              type: string
              format: date
            precio:
              type: number

        ActualizarCursoResponse:
          type: object
          properties:
            message:
              type: string
            curso_id:
              type: string
            actualizaciones:
              type: object
              additionalProperties: true

        EliminarCursoRequest:
          type: object
          required: [tenant_id, curso_id]
          properties:
            tenant_id:
              type: string
            curso_id:
              type: string

        EliminarCursoResponse:
          type: object
          properties:
            message:
              type: string
            curso_id:
              type: string
            total_horarios:
              type: integer

resources:
  Resources:
    TablaCursos:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-t_curso
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: curso_id
            AttributeType: S
          - AttributeName: tenant_instructor
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: curso_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: tenant_instructor_index
            KeySchema:
              - AttributeName: tenant_instructor
                KeyType: HASH
              - AttributeName: curso_id
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
