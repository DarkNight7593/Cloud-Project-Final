org: juanrodo
service: api-horario

plugins:
  - serverless-auto-swagger

provider:
  name: aws
  runtime: nodejs22.x
  memorySize: 1024
  timeout: 60
  iam:
    role: arn:aws:iam::752087942362:role/LabRole
  environment:
    FUNCION_CURSO: api-curso-${sls:stage}-obtenerCurso
    TABLE_HORARIO: ${sls:stage}-t_horario
    FUNCION_VALIDAR: api-usuario-${sls:stage}-validar

functions:

  crearHorario:
    handler: Lambda_CrearHorario.handler
    description: Crea un nuevo horario para un curso, validando conflictos.
    events:
      - http:
          path: /horario/crear
          method: post
          cors: true

  listarHorario:
    handler: Lambda_ListarHorario.handler
    description: Lista todos los horarios de un curso con paginación.
    events:
      - http:
          path: /horario/listar
          method: get
          cors: true

  obtenerHorario:
    handler: Lambda_BuscarHorario.handler
    description: Obtiene los detalles de un horario por ID.
    events:
      - http:
          path: /horario/buscar
          method: get
          cors: true

  actualizarHorario:
    handler: Lambda_ModiHorario.handler
    description: Actualiza los datos de un horario existente.
    events:
      - http:
          path: /horario/modificar
          method: put
          cors: true

  eliminarHorario:
    handler: Lambda_EliminarHorario.handler
    description: Elimina un horario específico.
    events:
      - http:
          path: /horario/eliminar
          method: delete
          cors: true

resources:
  Resources:
    TablaHorario:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-t_horario
        AttributeDefinitions:
          - AttributeName: tenant_id_curso_id
            AttributeType: S
          - AttributeName: horario_id
            AttributeType: S
          - AttributeName: tenant_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id_curso_id
            KeyType: HASH
          - AttributeName: horario_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: tenant_horario_index
            KeySchema:
              - AttributeName: tenant_id
                KeyType: HASH
              - AttributeName: horario_id
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

custom:
  autoswagger:
    type: httpApi
    generateSwaggerOnDeploy: true
    title: API de Horarios
    description: Endpoints para gestión de horarios de cursos: crear, listar, modificar y eliminar.
    basePath: /${sls:stage}
    useStage: true
    swaggerPath: /swagger
    swaggerJsonPath: /swagger.json
    models:

      CrearHorarioRequest:
        type: object
        required: [tenant_id, curso_id, dias, inicio_hora, fin_hora]
        properties:
          tenant_id: { type: string }
          curso_id: { type: string }
          dias:
            type: array
            items: { type: string }
          inicio_hora: { type: string, example: "08:00" }
          fin_hora: { type: string, example: "10:00" }

      ActualizarHorarioRequest:
        type: object
        required: [tenant_id, horario_id, dias, inicio_hora, fin_hora]
        properties:
          tenant_id: { type: string }
          horario_id: { type: string }
          dias:
            type: array
            items: { type: string }
          inicio_hora: { type: string, example: "09:00" }
          fin_hora: { type: string, example: "11:00" }

      EliminarHorarioRequest:
        type: object
        required: [tenant_id, horario_id]
        properties:
          tenant_id: { type: string }
          horario_id: { type: string }

      HorarioResponse:
        type: object
        properties:
          horario_id: { type: string }
          curso_id: { type: string }
          dias:
            type: array
            items: { type: string }
          inicio_hora: { type: string }
          fin_hora: { type: string }
          tenant_id: { type: string }

      ListarHorariosResponse:
        type: object
        properties:
          horarios:
            type: array
            items:
              $ref: "#/components/schemas/HorarioResponse"
          paginacion:
            type: object
            properties:
              total: { type: integer }
              lastHorarioId: { type: string }

