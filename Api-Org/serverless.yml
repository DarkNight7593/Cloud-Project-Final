org: juanrodo
service: api-org

plugins:
  - serverless-auto-swagger

provider:
  name: aws
  runtime: python3.12
  memorySize: 1024
  timeout: 60
  iam:
    role: arn:aws:iam::752087942362:role/LabRole
  environment:
    TABLE_ORG: ${sls:stage}-t_org
    FUNCION_VALIDAR: api-usuario-${sls:stage}-validar

functions:
  crearorg:
    handler: Lambda_CrearOrganizacion.lambda_handler
    events:
      - http:
          path: /org/crear
          method: post
          cors: true

  listarorg:
    handler: Lambda_ListarOrg.lambda_handler
    events:
      - http:
          path: /org/listar
          method: get
          cors: true

  buscarorg:
    handler: Lambda_BuscarOrg.lambda_handler
    events:
      - http:
          path: /org/buscar
          method: post
          cors: true

  modificarorg:
    handler: Lambda_ModiOrg.lambda_handler
    events:
      - http:
          path: /org/modi
          method: put
          cors: true

custom:
  autoswagger:
    type: httpApi
    generateSwaggerOnDeploy: true
    apiType: http
    title: API Organización
    description: Endpoints de gestión de organizaciones (tenants)
    basePath: /${sls:stage}
    swaggerPath: /swagger
    swaggerJsonPath: /swagger.json
    useStage: true
    models:
      CrearOrganizacionRequest:
        type: object
        required: [tenant_id, domain, descripcion, correo]
        properties:
          tenant_id: { type: string }
          domain: { type: string }
          descripcion: { type: string }
          correo: { type: string }

      ModificarOrganizacionRequest:
        type: object
        required: [tenant_id]
        properties:
          tenant_id: { type: string }
          domain: { type: string }
          descripcion: { type: string }
          correo: { type: string }

      BuscarOrganizacionRequest:
        type: object
        required: [tenant_id]
        properties:
          tenant_id: { type: string }

      BuscarOrganizacionResponse:
        type: object
        properties:
          tenant_id: { type: string }
          domain: { type: string }
          descripcion: { type: string }
          correo: { type: string }

      ListaOrganizacionesResponse:
        type: object
        properties:
          organizaciones:
            type: array
            items:
              type: object
              properties:
                tenant_id: { type: string }
                domain: { type: string }
                descripcion: { type: string }
                correo: { type: string }
          total: { type: integer }

      RespuestaGenerica:
        type: object
        properties:
          message: { type: string }
          error: { type: string }

resources:
  Resources:
    TablaOrg:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-t_org
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
